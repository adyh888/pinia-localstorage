"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tc = void 0;
var tslib_1 = require("tslib");
var request_1 = require("../request");
function Tc(service, isDebugMode, isAesToStr) {
    var _this = this;
    if (isDebugMode === void 0) { isDebugMode = false; }
    if (isAesToStr === void 0) { isAesToStr = false; }
    return {
        type: new request_1.Request("/tc/type", service, isDebugMode, isAesToStr),
        specifications: new request_1.Request("/tc/specifications", service, isDebugMode, isAesToStr),
        item: new request_1.Request("/tc/item", service, isDebugMode, isAesToStr),
        suit: new request_1.Request("/tc/suit", service, isDebugMode, isAesToStr),
        suit_template: new request_1.Request("/tc/suit_template", service, isDebugMode, isAesToStr),
        suit_template_item: new request_1.Request("/tc/suit_template_item", service, isDebugMode, isAesToStr),
        recycling_type: new request_1.Request("/tc/recycling_type", service, isDebugMode, isAesToStr),
        workorder_type: new request_1.Request("/tc/workorder_type", service, isDebugMode, isAesToStr),
        car_model: new request_1.Request("/tc/car_model", service, isDebugMode, isAesToStr),
        production_process: new request_1.Request("/tc/production_process", service, isDebugMode, isAesToStr),
        production_process_item: new request_1.Request("/tc/production_process_item", service, isDebugMode, isAesToStr),
        supplies: new request_1.Request('/tc/supplies', service, isDebugMode),
        organizational_inventory: new request_1.Request('/tc/organizational_inventory', service, isDebugMode),
        // class
        tool: new request_1.Request("/tc/tool", service, isDebugMode, isAesToStr),
        rfid: new request_1.Request("/tc/rfid", service, isDebugMode, isAesToStr),
        rent: new request_1.Request("/tc/rent", service, isDebugMode, isAesToStr),
        transfer: new request_1.Request("/tc/transfer", service, isDebugMode, isAesToStr),
        transfer_item: new request_1.Request("/tc/transfer_item", service, isDebugMode, isAesToStr),
        workorder: new request_1.Request("/tc/workorder", service, isDebugMode, isAesToStr),
        workorder_item: new request_1.Request("/tc/workorder_item", service, isDebugMode, isAesToStr),
        bill: new request_1.Request("/tc/bill", service, isDebugMode, isAesToStr),
        part: new request_1.Request("/tc/part", service, isDebugMode, isAesToStr),
        // function
        getVersion: function (service) {
            return request_1.mewRequest("/gc/select/version", {}, "POST", service, isDebugMode, isAesToStr);
        },
        insertTransferItemBatch: function (service) {
            return function (json) {
                return tslib_1.__awaiter(this, void 0, void 0, function () {
                    var res;
                    return tslib_1.__generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, request_1.mewMsPost("/tc/transfer/insert/batch", json, service, isDebugMode, isAesToStr)];
                            case 1:
                                res = _a.sent();
                                return [2 /*return*/, {
                                        code: res.code,
                                        data: res.data,
                                    }];
                        }
                    });
                });
            };
        },
        /**
         * 查询工具借用表
         * @param json
         */
        insertToolBatch: function (json) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var res;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, request_1.mewMsDelete("/tc/tool/insert/batch", json, service, isDebugMode, isAesToStr)];
                        case 1:
                            res = _a.sent();
                            return [2 /*return*/, {
                                    code: res.code,
                                    data: res.data,
                                }];
                    }
                });
            });
        },
        chartData: function (params) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, request_1.mewMsPost("/tc/workorder/chartData", params, service, isDebugMode, isAesToStr)];
                        case 1: return [2 /*return*/, _a.sent()];
                    }
                });
            });
        },
        itemExportData: function (params) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, request_1.mewMsPost("/tc/item/exportData", params, service, isDebugMode, isAesToStr)];
                        case 1: return [2 /*return*/, _a.sent()];
                    }
                });
            });
        },
        /**
         * 生成工单和工单详情
         * @param params
         */
        workorderItemInit: function (params) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var url, res;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            url = "/tc/workorder_item/init";
                            return [4 /*yield*/, request_1.mewMsPost(url, params, service, isDebugMode)];
                        case 1:
                            res = _a.sent();
                            return [2 /*return*/, res.data];
                    }
                });
            });
        },
        //备件使用情况百分比图,默认使用上周的数据
        workorderPro: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var res;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest("/tc/workorder/workorderPro", params, "POST", service, isDebugMode, isAesToStr)];
                    case 1:
                        res = _a.sent();
                        console.log("workorderPro", res);
                        return [2 /*return*/, res];
                }
            });
        }); },
        //柜子使用情况
        locationStatus: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var res;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest("/tc/workorder/locationStatus", params, "POST", service, isDebugMode, isAesToStr)];
                    case 1:
                        res = _a.sent();
                        console.log("locationStatus", res);
                        return [2 /*return*/, res];
                }
            });
        }); },
        //未预检top5,默认使用上周的数据
        unInspectTop: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var res;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest("/tc/workorder/unInspectTop", params, "POST", service, isDebugMode, isAesToStr)];
                    case 1:
                        res = _a.sent();
                        console.log("unInspectTop", res);
                        return [2 /*return*/, res];
                }
            });
        }); },
        //领用top5,默认使用上周的数据
        receivedTop: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var res;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest("/tc/workorder/receivedTop", params, "POST", service, isDebugMode, isAesToStr)];
                    case 1:
                        res = _a.sent();
                        console.log("receivedTop", res);
                        return [2 /*return*/, res];
                }
            });
        }); },
        //预检top5,默认使用上周的数据
        inspectTop: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var res;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest("/tc/workorder/inspectTop", params, "POST", isDebugMode, isAesToStr)];
                    case 1:
                        res = _a.sent();
                        console.log("inspectTop", res);
                        return [2 /*return*/, res];
                }
            });
        }); },
        //部门预检统计,默认使用上周的数据
        depPreInspectStatistics: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var res;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest("/tc/workorder/depPreInspectStatistics", params, "POST", service, isDebugMode, isAesToStr)];
                    case 1:
                        res = _a.sent();
                        console.log("depPreInspectStatistics", res);
                        return [2 /*return*/, res];
                }
            });
        }); },
        //部门预检率,默认使用上周的数据
        depPreInspectPro: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var res;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest("/tc/workorder/depPreInspectPro", params, "POST", service, isDebugMode, isAesToStr)];
                    case 1:
                        res = _a.sent();
                        console.log("depPreInspectPro", res);
                        return [2 /*return*/, res];
                }
            });
        }); },
        //部门预检率,默认使用上七周的数据
        depPreInspectProByWeek: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var res;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest("/tc/workorder/depPreInspectProByWeek", params, "POST", service, isDebugMode, isAesToStr)];
                    case 1:
                        res = _a.sent();
                        console.log("depPreInspectProByWeek", res);
                        return [2 /*return*/, res];
                }
            });
        }); },
        //获取总工单数,预留备件数,预检备件数,预检率,合格数项,备件合格率,默认使用上周的数据
        totalWorkorderNumAndOther: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var res;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest("/tc/workorder/totalWorkorderNumAndOther", params, "POST", service, isDebugMode, isAesToStr)];
                    case 1:
                        res = _a.sent();
                        console.log("totalWorkorderNumAndOther", res);
                        return [2 /*return*/, res];
                }
            });
        }); },
        //获取总工单数,预留备件数,预检备件数,预检率,合格数项,备件合格率,默认使用上周的数据
        bindParentTool: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest("/tc/tool/bindParentTool", params, "POST", service, isDebugMode, isAesToStr)];
                    case 1: 
                    // console.log("bindParentToolRes:", res)
                    return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        //上下架
        rfidShelf: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest("/tc/rfid/shelf", params, "POST", service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        //// 批量插入工单项
        workorderItemInsertBatch: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest("/tc/workorder_item/insert/batch", params, "POST", service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        suitTemplateItemInsertBatch: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest("/tc/suit_template_item/insert/batch", params, "POST", service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        productionProcessItemInsertBatch: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest("/tc/production_process_item/insert/batch", params, "POST", service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        productionProcessGenerateWorkorder: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, request_1.mewRequest("/tc/production_process/generateWorkorder", params, "POST", service, isDebugMode, isAesToStr)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); },
        rfidInsertBatchByEpcArr: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, request_1.mewRequest("/tc/rfid/insert/batch/epcArr", params, "POST", service, isDebugMode, isAesToStr)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); },
        rfidBindTool: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, request_1.mewRequest("/tc/rfid/bindTool", params, "POST", service, isDebugMode, isAesToStr)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); },
        rfidUnbindTool: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, request_1.mewRequest("/tc/rfid/unbindTool", params, "POST", service, isDebugMode, isAesToStr)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); },
        suitGetCode: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, request_1.mewRequest("/tc/suit/getCode", params, "POST", service, isDebugMode, isAesToStr)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); },
        suitTemplateGetCode: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, request_1.mewRequest("/tc/suit_template/getCode", params, "POST", service, isDebugMode, isAesToStr)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); },
        generateToolByParentTool: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, request_1.mewRequest("/tc/tool/generateToolByParentTool", params, "POST", service, isDebugMode, isAesToStr)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); },
        rfidUpdateBatch: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, request_1.mewRequest("/tc/rfid/update/batch", params, "POST", service, isDebugMode, isAesToStr)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); },
        workorderItemUpdateBatch: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, request_1.mewRequest("/tc/workorder_item/update/batch", params, "POST", service, isDebugMode, isAesToStr)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); },
        toolResetData: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, request_1.mewRequest("/tc/tool/resetData", params, "POST", service, isDebugMode, isAesToStr)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); },
        workorderLockerOrder: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, request_1.mewRequest("/tc/workorder/locker/order", params, "POST", service, isDebugMode, isAesToStr)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); },
        workorderLockerOrderCancel: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, request_1.mewRequest("/tc/workorder/locker/order/cancel", params, "POST", service, isDebugMode, isAesToStr)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); },
        rfidClassificationStatistics: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, request_1.mewRequest("/tc/rfid/classificationStatistics", params, "POST", service, isDebugMode, isAesToStr)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); },
        rfidStatus: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, request_1.mewRequest("/tc/rfid/getStatus", params, "POST", service, isDebugMode, isAesToStr)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); },
    };
}
exports.Tc = Tc;
