"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAuth = exports.Mc = exports.AppGetDingTalkUserInfo = exports.RoleName = void 0;
var tslib_1 = require("tslib");
var request_1 = require("../request");
// interface
// TODO 此处如果新增，需要修改 initDepartmentList 切记
var RoleName;
(function (RoleName) {
    RoleName["unauthorized"] = "unauthorized";
    RoleName["company"] = "company";
    RoleName["company2"] = "company2";
    RoleName["admin"] = "admin";
    RoleName["super"] = "super";
    RoleName["gtadmin"] = "gtadmin";
    RoleName["gtdepart"] = "gtdepart";
    RoleName["gtdepart1"] = "gtdepart1";
})(RoleName = exports.RoleName || (exports.RoleName = {}));
var AppGetDingTalkUserInfo = /** @class */ (function () {
    function AppGetDingTalkUserInfo() {
    }
    return AppGetDingTalkUserInfo;
}());
exports.AppGetDingTalkUserInfo = AppGetDingTalkUserInfo;
function Mc(service, isDebugMode, isAesToStr) {
    var _this = this;
    if (isDebugMode === void 0) { isDebugMode = false; }
    if (isAesToStr === void 0) { isAesToStr = false; }
    return {
        role: new request_1.Request('/mc/role', service, isDebugMode, isAesToStr),
        // class
        manager: new request_1.Request('/mc/manager', service, isDebugMode, isAesToStr),
        access: new request_1.Request('/mc/access', service, isDebugMode, isAesToStr),
        role_access: new request_1.Request('/mc/role_access', service, isDebugMode, isAesToStr),
        app: new request_1.Request('/mc/app', service, isDebugMode, isAesToStr),
        // function
        getAuth: function (json) { return request_1.mewRequest('/auth', json, 'POST', service, isDebugMode, isAesToStr); },
        getVersion: function () { return request_1.mewRequest('/mc/select/version', {}, 'POST', service, isDebugMode, isAesToStr); },
        getAccessToken: function (appid) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest('/mc/app/getAccessToken', { appid: appid }, 'POST', service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        // getCorpAccessToken: async (json:GetAccessTokenProperty): Promise<{ code, msg, data: AccessTokenData }> => {
        //     return await mewRequest( '/mc/app/getCorpAccessToken', json,'POST', service,isDebugMode)
        // },
        /**
         * 废弃，使用 getAppUserInfo
         * @param json
         */
        getDingTalkUserInfo: function (json) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest('/mc/app/getDingTalkUserInfo', json, 'POST', service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        getAppUserInfo: function (json) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest('/mc/app/getUserInfo', json, 'POST', service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        getUserPhoneNo: function (json) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest('/mc/app/getUserPhoneNo', json, 'POST', service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        sendDingTalkMessage: function (json) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest('/mc/app/sendDingTalkMessage', json, 'POST', service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        sendWeiXinMessage: function (json) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest('/mc/app/sendWxMessage', json, 'POST', service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        getAccessByRole: function (json) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest('/mc/role_access/getAccessByRole', json, 'POST', service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        // 批量修改角色权限
        updateRoleAccessBatch: function (json) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewMsPost("/mc/role_access/update/batch", json, service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        // access直接导入
        accessDirectExcelSave: function (json) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewMsPost("/mc/access/directExcelSave", json, service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        alipayTransfer: function (json) { return request_1.mewRequest('/mc/app/alipayTransfer', json, 'POST', service, isDebugMode, isAesToStr); },
    };
}
exports.Mc = Mc;
function getAuth(json, service) {
    return request_1.mewRequest('/auth', json, 'POST', service);
}
exports.getAuth = getAuth;
