import { Request } from "../request";
import { AxiosInstance } from "axios";
import { User } from "./uc";
export interface Type {
    enabled: boolean;
    groupId: number;
    deviceTypeId: number;
    companyId: number;
    class: string;
    classMark: string;
    kind: string;
    kindMark: string;
    type: string;
    typeMark: string;
    belong: string;
    desc: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface TypeProperty {
    enabled?: boolean;
    groupId?: number;
    deviceTypeId?: number;
    companyId?: number;
    classMark?: string;
    kind?: string;
    kindMark?: string;
    type?: string;
    typeMark?: string;
    belong?: string;
    desc?: string;
    id?: number;
}
export interface TypeSelectProperty extends TypeProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface TypeUpdateProperty extends TypeProperty {
    id: number;
}
export interface TypeInsertProperty extends TypeProperty {
    type: string;
}
export interface TypeDeleteProperty extends TypeProperty {
    id: number;
}
export interface Specifications {
    groupId: number;
    isCharger: number;
    chargeDur: number;
    autoOffPowerThreshold: number;
    autoOffPowerDelayed: number;
    chargeMaxDur: number;
    companyId: number;
    imageInfo: string;
    mark: string;
    partNo: string;
    lackPer: number;
    lackNum: number;
    num: number;
    isMeteringTool: boolean;
    isFixedAssets: boolean;
    typeId: number;
    materialCode: string;
    alarmDays: number;
    unLendDays: number;
    checkCycle: number;
    lifeCycle: string;
    size: string;
    unit: string;
    price: number;
    pcs: number;
    effectiveTime: number;
    model: string;
    name: string;
    nameCode: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface SpecificationsProperty {
    groupId?: number;
    companyId?: number;
    isCharger?: number;
    chargeDur?: number;
    autoOffPowerThreshold?: number;
    autoOffPowerDelayed?: number;
    chargeMaxDur?: number;
    imageInfo?: string;
    mark?: string;
    partNo?: string;
    lackPer?: number;
    lackNum?: number;
    specNum?: number;
    pcs?: number;
    isMeteringTool?: boolean;
    isFixedAssets?: boolean;
    typeId?: number;
    materialCode?: string;
    alarmDays?: number;
    unLendDays?: number;
    checkCycle?: number;
    lifeCycle?: string;
    unit?: string;
    size?: string;
    price?: number;
    model?: string;
    name?: string;
    nameCode?: string;
    id?: number;
    checkTIme?: number;
}
export interface SpecificationsSelectProperty extends SpecificationsProperty {
    partNameOrItemNo?: string;
    unbindRoleTool?: boolean;
    effectiveTime?: number[];
    notInTool?: boolean;
    curPageNo?: number;
    stockStatus?: number;
    roleId?: number;
    uid?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface SpecificationsUpdateProperty extends SpecificationsProperty {
    effectiveTime?: number;
    id: number;
}
export interface SpecificationsInsertProperty extends SpecificationsProperty {
    effectiveTime?: number;
}
export interface SpecificationsDeleteProperty extends SpecificationsProperty {
    effectiveTime?: number;
    notInTool?: boolean;
    id: number;
}
export interface Item {
    isBindTag: boolean;
    updateTime: number;
    effectiveTime: number;
    effectiveTime2: number;
    purchaseTime: number;
    productTime: number;
    warrantyTime: number;
    checkTime: number;
    checkTime2: number;
    lackPer: number;
    lackNum: number;
    tagValue: string;
    tagType: string;
    mark: string;
    updateUser: string;
    safekeepingPlace: string;
    purchaseSource: string;
    supplierName: string;
    brandName: string;
    specificationId: number;
    typeId: number;
    companyId: number;
    checkCycle: number;
    checkResult: string;
    checkResult2: string;
    checkStatus: string;
    departmentId: number;
    toolCabinetName: string;
    manufacturer: string;
    checkType: string;
    fixedAssetsCode: string;
    precisionLv: string;
    toolStatus: string;
    settingValue: string;
    toolSpecification: string;
    toolType: string;
    toolClass: string;
    toolName: string;
    toolCode: string;
    id: number;
    suitId: number;
    startAt?: number;
    endAt?: number;
}
export interface ItemProperty {
    isBindTag?: boolean;
    checkCycle?: number;
    checkResult?: string;
    checkResult2?: string;
    tagValue?: string;
    checkStatus?: string;
    tagType?: string;
    lackPer?: number;
    lackNum?: number;
    mark?: string;
    updateUser?: string;
    certificateNo?: string;
    specificationId?: number;
    typeId?: number;
    safekeepingPlace?: string;
    purchaseSource?: string;
    supplierName?: string;
    brandName?: string;
    companyId?: number;
    departmentId?: number;
    suitId?: number;
    toolCabinetName?: string;
    manufacturer?: string;
    checkType?: string;
    fixedAssetsCode?: string;
    precisionLv?: string;
    toolStatus?: string;
    settingValue?: string;
    toolSpecification?: string;
    toolType?: string;
    toolClass?: string;
    toolName?: string;
    toolCode?: string;
    id?: number;
}
export interface ItemSelectProperty extends ItemProperty {
    isMeteringTool?: boolean;
    isEffective?: boolean;
    toolNameOrCode?: string;
    updateTime?: number[];
    effectiveTime?: number[];
    purchaseTime?: number[];
    productTime?: number[];
    warrantyTime?: number[];
    checkTime?: number[];
    checkTime2?: number[];
    toolStatusArr?: string[];
    curPageNo?: number;
    groupId?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface ItemUpdateProperty extends ItemProperty {
    checkTime?: number;
    checkTime2?: number;
    updateTime?: number;
    effectiveTime?: number;
    purchaseTime?: number;
    productTime?: number;
    warrantyTime?: number;
    id: number;
}
export interface ItemInsertProperty extends ItemProperty {
    checkTime?: number;
    checkTime2?: number;
    updateTime?: number;
    effectiveTime?: number;
    purchaseTime?: number;
    productTime?: number;
    warrantyTime?: number;
}
export interface ItemDeleteProperty extends ItemProperty {
    id?: number;
    idArr?: number[];
    checkTime?: number;
    checkTime2?: number;
    updateTime?: number;
    effectiveTime?: number;
    purchaseTime?: number;
    productTime?: number;
    warrantyTime?: number;
}
export interface Suit {
    desc: string;
    type: string;
    motorCarModel: string;
    motorCarUnitNo: string;
    departmentId: number;
    rfidId: number;
    location: string;
    groupId: number;
    companyId: number;
    suitTemplateId: number;
    code: string;
    name: string;
    id: number;
    apply?: number;
    startAt?: number;
    endAt?: number;
}
export interface SuitProperty {
    desc?: string;
    type?: string;
    apply?: number;
    rfidId?: number;
    motorCarModel?: string;
    motorCarUnitNo?: string;
    departmentId?: number;
    location?: string;
    groupId?: number;
    companyId?: number;
    suitTemplateId?: number;
    code?: string;
    name?: string;
    id?: number;
}
export interface SuitSelectProperty extends SuitProperty {
    companyName?: string;
    departmentName?: string;
    suitTemplateName?: string;
    suitTemplateType?: string;
    needDetails?: boolean;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface SuitUpdateProperty extends SuitProperty {
    id: number;
    suitEpc?: string;
    toolCodes?: string[];
    needDetails?: boolean;
    isComplete?: boolean;
    fromRfid?: boolean;
}
export interface SuitInsertProperty extends SuitProperty {
    suitEpc?: string;
    toolCode?: string;
    toolCodes?: string[];
    fromRfid?: boolean;
}
export interface SuitDeleteProperty extends SuitProperty {
    id: number;
}
export interface SuitTemplate {
    desc: string;
    departmentId: number;
    groupId: number;
    companyId: number;
    enabled: number;
    name: string;
    code: string;
    id: number;
    type?: string;
    startAt?: number;
    endAt?: number;
}
export interface SuitTemplateProperty {
    desc?: string;
    departmentId?: number;
    groupId?: number;
    enabled?: number;
    companyId?: number;
    name?: string;
    code?: string;
    id?: number;
}
export interface SuitTemplateSelectProperty extends SuitTemplateProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface SuitTemplateUpdateProperty extends SuitTemplateProperty {
    id: number;
}
export interface SuitTemplateInsertProperty extends SuitTemplateProperty {
    name: string;
    code: string;
    newPart?: boolean;
}
export interface SuitTemplateDeleteProperty extends SuitTemplateProperty {
    id: number;
}
export interface SuitTemplateItem {
    suitTemplateId: number;
    num: number;
    toolSpecification: string;
    toolName: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface SuitTemplateItemProperty {
    suitTemplateId?: number;
    num?: number;
    toolSpecification?: string;
    toolName?: string;
    id?: number;
}
export interface SuitTemplateItemSelectProperty extends SuitTemplateItemProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface SuitTemplateItemUpdateProperty extends SuitTemplateItemProperty {
    id: number;
}
export interface SuitTemplateItemInsertProperty extends SuitTemplateItemProperty {
    suitTemplateId: number;
    num: number;
    toolName: string;
}
export interface SuitTemplateItemDeleteProperty extends SuitTemplateItemProperty {
    idArr?: number[];
}
export interface RecyclingType {
    desc: string;
    departmentId: number;
    groupId: number;
    companyId: number;
    code: string;
    name: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface RecyclingTypeProperty {
    desc?: string;
    departmentId?: number;
    groupId?: number;
    companyId?: number;
    code?: string;
    name?: string;
    id?: number;
}
export interface RecyclingTypeSelectProperty extends RecyclingTypeProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface RecyclingTypeUpdateProperty extends RecyclingTypeProperty {
    id: number;
}
export interface RecyclingTypeInsertProperty extends RecyclingTypeProperty {
    name: string;
}
export interface RecyclingTypeDeleteProperty extends RecyclingTypeProperty {
    id: number;
}
export interface WorkorderType {
    groupId: number;
    companyId: number;
    enabled: number;
    kind: string;
    initType: string;
    type: string;
    desc: string;
    name: string;
    id: number;
    startAt?: number;
    endAt?: number;
    deadline?: number;
    closeTime?: number;
    overdueTime?: number;
}
export interface WorkorderTypeProperty {
    groupId?: number;
    enabled?: number;
    companyId?: number;
    kind?: string;
    initType?: string;
    desc?: string;
    type?: string;
    name?: string;
    id?: number;
    deadline?: number;
    closeTime?: number;
}
export interface WorkorderTypeSelectProperty extends WorkorderTypeProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface WorkorderTypeUpdateProperty extends WorkorderTypeProperty {
    id: number;
}
export interface WorkorderTypeInsertProperty extends WorkorderTypeProperty {
    name: string;
}
export interface WorkorderTypeDeleteProperty extends WorkorderTypeProperty {
    id?: number;
    idArr?: number[];
}
export interface CarModel {
    desc: string;
    groupId: number;
    companyId: number;
    departmentId: number;
    teamId: number;
    name: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface CarModelProperty {
    desc?: string;
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    teamId?: number;
    name?: string;
    id?: number;
}
export interface CarModelSelectProperty extends CarModelProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface CarModelUpdateProperty extends CarModelProperty {
    id: number;
}
export interface CarModelInsertProperty extends CarModelProperty {
    name: string;
}
export interface CarModelDeleteProperty extends CarModelProperty {
    id: number;
}
export interface ProductionProcess {
    desc: string;
    enabled: number;
    teamId: number;
    departmentId: number;
    groupId: number;
    companyId: number;
    positionId: number;
    parentId: number;
    order: number;
    type: string;
    code: string;
    name: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface ProductionProcessProperty {
    desc?: string;
    enabled?: number;
    teamId?: number;
    departmentId?: number;
    groupId?: number;
    companyId?: number;
    positionId?: number;
    parentId?: number;
    order?: number;
    type?: string;
    code?: string;
    name?: string;
    id?: number;
}
export interface ProductionProcessSelectProperty extends ProductionProcessProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface ProductionProcessUpdateProperty extends ProductionProcessProperty {
    id: number;
}
export interface ProductionProcessInsertProperty extends ProductionProcessProperty {
    name: string;
}
export interface ProductionProcessDeleteProperty extends ProductionProcessProperty {
    id?: number;
    idArr?: number[];
}
export interface ProductionProcessItem {
    desc: string;
    teamId: number;
    departmentId: number;
    groupId: number;
    companyId: number;
    productionProcessId: number;
    num: number;
    suitTemplateId: number;
    specificationId: number;
    partNo: string;
    order: number;
    type: string;
    code: string;
    name: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface ProductionProcessItemProperty {
    desc?: string;
    teamId?: number;
    departmentId?: number;
    groupId?: number;
    companyId?: number;
    productionProcessId?: number;
    num?: number;
    suitTemplateId?: number;
    specificationId?: number;
    partNo?: string;
    order?: number;
    type?: string;
    code?: string;
    name?: string;
    id?: number;
}
export interface ProductionProcessItemSelectProperty extends ProductionProcessItemProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface ProductionProcessItemUpdateProperty extends ProductionProcessItemProperty {
    id: number;
}
export interface ProductionProcessItemInsertProperty extends ProductionProcessItemProperty {
    productionProcessId: number;
}
export interface ProductionProcessItemDeleteProperty extends ProductionProcessItemProperty {
    id?: number;
    idArr?: number[];
}
export interface Supplies {
    LastUpdateAt: string;
    CreateAt: string;
    LogAt: string;
    MRQty: number;
    KeyWord: string;
    PartDescription: string;
    PartNo: string;
    MRDemandByTel: string;
    MRDemandName: string;
    MRDemandBy: string;
    RFID: string;
    MRNo: string;
    QTY: number;
    IsKeeper: string;
    LastUpdateBy: string;
    CreateBy: string;
    OprAction: string;
    SourceFrom: string;
    Status: string;
    HolderTel: string;
    HolderName: string;
    Holder: string;
    IsHold: string;
    Picture: string;
    OPD: string;
    CabinetLocation: string;
    ATD: string;
    ATA: string;
    ETD: string;
    ETA: string;
    ACType: string;
    ACN: string;
    CustID: string;
    JobNo: string;
    ProjectID: string;
    ExpiryDate: string;
    GRNExpiryDate: string;
    GRNNo: string;
    UOI: string;
    epc: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface SuppliesProperty {
    LastUpdateAt?: string;
    CreateAt?: string;
    LogAt?: string;
    MRQty?: number;
    KeyWord?: string;
    PartDescription?: string;
    PartNo?: string;
    MRDemandByTel?: string;
    MRDemandName?: string;
    MRDemandBy?: string;
    RFID?: string;
    MRNo?: string;
    QTY?: number;
    IsKeeper?: string;
    LastUpdateBy?: string;
    CreateBy?: string;
    OprAction?: string;
    SourceFrom?: string;
    Status?: string;
    HolderTel?: string;
    HolderName?: string;
    Holder?: string;
    IsHold?: string;
    Picture?: string;
    OPD?: string;
    CabinetLocation?: string;
    ATD?: string;
    ATA?: string;
    ETD?: string;
    ETA?: string;
    ACType?: string;
    ACN?: string;
    CustID?: string;
    JobNo?: string;
    ProjectID?: string;
    ExpiryDate?: string;
    GRNExpiryDate?: string;
    GRNNo?: string;
    UOI?: string;
    epc?: string;
    id?: number;
}
export interface SuppliesSelectProperty extends SuppliesProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface SuppliesUpdateProperty extends SuppliesProperty {
    id: number;
}
export interface SuppliesInsertProperty extends SuppliesProperty {
    LastUpdateAt: string;
    CreateAt: string;
}
export interface SuppliesDeleteProperty extends SuppliesProperty {
    id: number;
}
export interface OrganizationalInventory {
    teamId: string;
    departmentId: number;
    groupId: number;
    companyId: number;
    safetyStock: number;
    num: number;
    partDes: string;
    partNo: string;
    specificationModel: string;
    specificationName: string;
    specificationId: number;
    uuid: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface OrganizationalInventoryProperty {
    teamId?: string;
    departmentId?: number;
    groupId?: number;
    companyId?: number;
    safetyStock?: number;
    num?: number;
    partDes?: string;
    partNo?: string;
    specificationModel?: string;
    specificationName?: string;
    specificationId?: number;
    uuid?: string;
    id?: number;
}
export interface OrganizationalInventorySelectProperty extends OrganizationalInventoryProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface OrganizationalInventoryUpdateProperty extends OrganizationalInventoryProperty {
    id: number;
}
export interface OrganizationalInventoryInsertProperty extends OrganizationalInventoryProperty {
}
export interface OrganizationalInventoryDeleteProperty extends OrganizationalInventoryProperty {
    id: number;
}
export interface Tool {
    id: number;
    deviceId: string;
    drawerId: string;
    chargerId: number;
    chargeIndex: number;
    fullScaleWeight: number;
    sensorWeight: number;
    loadWeight: number;
    standardNum: number;
    serialNum: string;
    stockReturnLocation: string;
    returnLocation: string;
    location: string;
    tags: string;
    isGoods: boolean;
    name: string;
    imageInfo: string;
    negate: boolean;
    num: number;
    lockIndex: number;
    specificationId: number;
    recyclingTypeId: number;
    lockId: string;
    partNo: string;
    specificationName: string;
    partDes: string;
    itemNo: string;
    quantity: number;
    suitId: number;
    parentToolId: number;
    safetyStock: number;
    shelvesNum: number;
    status: boolean;
    repairStatus: number;
    preInspectionStatus: number;
    top: number;
    left: number;
    width: number;
    height: number;
    group: string;
    property: string;
    url: string;
    weight: number;
    typeId: number;
    price: number;
    type: number;
    createdAt: number;
    updatedAt: number;
}
export interface ToolInsertBatchProperty {
    deviceId: string;
    drawerNo: number;
    drawerItemNum: number;
}
export interface ToolInsertProperty {
    id: number;
    deviceId: string;
    drawerId: string;
    stockReturnLocation?: string;
    returnLocation?: string;
    specificationName?: string;
    lockIndex?: number;
    chargeIndex?: number;
    lockId?: string;
    chargerId?: number;
    specificationId?: number;
    typeId?: number;
    recyclingTypeId?: number;
    serialNum?: string;
    tags?: string;
    isGoods?: boolean;
    location: string;
    suitId?: number;
    fullScaleWeight?: number;
    sensorWeight?: number;
    loadWeight?: number;
    standardNum?: number;
    parentToolId?: number;
    group?: string;
    property?: string;
    imageInfo?: string;
    negate?: boolean;
    partNo?: string;
    partDes?: string;
    itemNo?: string;
    quantity?: number;
    safetyStock?: number;
    status?: boolean;
    preInspectionStatus?: number;
    type?: number;
    repairStatus?: number;
    top?: number;
    left?: number;
    width?: number;
    height?: number;
    url?: string;
    num?: number;
    weight?: number;
    price?: number;
    shelvesNum?: number;
}
export interface ToolUpdateProperty {
    id?: number;
    deviceId?: string;
    drawerId?: string;
    specificationName?: string;
    stockReturnLocation?: string;
    returnLocation?: string;
    chargerId?: number;
    managerId?: number;
    chargeIndex?: number;
    specificationId?: number;
    typeId?: number;
    recyclingTypeId?: number;
    serialNum?: string;
    location?: string;
    group?: string;
    tags?: string;
    isGoods?: boolean;
    property?: string;
    lockIndex?: number;
    lockId?: string;
    fullScaleWeight?: number;
    standardNum?: number;
    sensorWeight?: number;
    loadWeight?: number;
    imageInfo?: string;
    suitId?: number;
    parentToolId?: number;
    negate?: boolean;
    partNo?: string;
    partDes?: string;
    itemNo?: string;
    quantity?: number;
    safetyStock?: number;
    status?: boolean;
    preInspectionStatus?: number;
    type?: number;
    repairStatus?: number;
    top?: number;
    left?: number;
    width?: number;
    height?: number;
    url?: string;
    key?: string;
    num?: number;
    weight?: number;
    price?: number;
    shelvesNum?: number;
    updateNum?: number;
    updateShelvesNum?: number;
}
export interface ToolDeleteProperty {
    id?: number;
    deviceId?: string;
    drawerId?: string;
    specificationName?: string;
    chargerId?: number;
    stockReturnLocation?: string;
    returnLocation?: string;
    chargeIndex?: number;
    specificationId?: number;
    recyclingTypeId?: number;
    typeId?: number;
    serialNum?: string;
    fullScaleWeight?: number;
    sensorWeight?: number;
    loadWeight?: number;
    standardNum?: number;
    location?: string;
    suitId?: number;
    lockIndex?: number;
    lockId?: string;
    parentToolId?: number;
    group?: string;
    property?: string;
    imageInfo?: string;
    negate?: boolean;
    tags?: string;
    isGoods?: boolean;
    partNo?: string;
    partDes?: string;
    itemNo?: string;
    quantity?: number;
    safetyStock?: number;
    status?: boolean;
    preInspectionStatus?: number;
    type?: number;
    repairStatus?: number;
    top?: number;
    left?: number;
    width?: number;
    height?: number;
    url?: string;
    num?: number;
    weight?: number;
    price?: number;
    shelvesNum?: number;
}
export interface ToolSelectProperty {
    id?: number;
    groupId?: number;
    companyId?: number;
    typeId?: number;
    chargeIndex?: number;
    departmentId?: number;
    rfidDetails?: boolean;
    notInUserTool?: boolean;
    specificationId?: number;
    recyclingTypeId?: number;
    stockReturnLocation?: string;
    returnLocation?: string;
    roleId?: number;
    uid?: number;
    teamId?: number;
    noRfid?: boolean;
    unbindRoleTool?: boolean;
    key?: string;
    specificationName?: string;
    lockIndex?: number;
    lockId?: string;
    suitId?: number;
    parentToolId?: number;
    name?: string;
    fullScaleWeight?: number;
    sensorWeight?: number;
    loadWeight?: number;
    standardNum?: number;
    imageInfo?: string;
    deviceKind?: string;
    isPTId?: boolean;
    inWarehouse?: boolean;
    group?: string;
    property?: string;
    deviceId?: string;
    terminalId?: number;
    drawerId?: string;
    tags?: string;
    isGoods?: boolean;
    chargerId?: number;
    serialNum?: string;
    location?: string;
    url?: string;
    negate?: boolean;
    isRent?: boolean;
    partNo?: string;
    partDes?: string;
    itemNo?: string;
    quantity?: number;
    stockStatus?: number;
    safetyStock?: number;
    status?: boolean;
    preInspectionStatus?: number;
    type?: number;
    repairStatus?: number;
    weight?: number;
    price?: number;
    shelvesNum?: number;
    num?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
    lendStartTime?: number;
    lendEndTime?: number;
}
export interface Rfid {
    id: number;
    toolId: number;
    itemId: number;
    suitId: number;
    terminalId: number;
    checkCycle?: number;
    faSuitId?: number;
    expireTime?: number;
    remindTime?: number;
    lackPer?: number;
    lackNum?: number;
    epc: string;
    tid: string;
    user: string;
    status: number;
    toolCode: string;
    toolName: string;
    inventoryStatus: string;
    itemNo: string;
    toolStatus: string;
    specification: string;
    toolSpecification: string;
    externalId: string;
    isRepair: boolean;
    onShelf: number;
    specificationId: number;
    enabled: boolean;
    deviceId: string;
    inWarehouse: number;
    createdAt: number;
    updatedAt: number;
    tool: Tool;
}
export interface RfidInsertProperty {
    id?: number;
    enabled: boolean;
    isRepair?: boolean;
    onShelf?: number;
    checkCycle?: number;
    faSuitId?: number;
    expireTime?: number;
    remindTime?: number;
    lackPer?: number;
    lackNum?: number;
    specificationId?: number;
    epc: string;
    tid: string;
    user: string;
    toolCode?: string;
    toolSpecification?: string;
    toolName?: string;
    inventoryStatus?: string;
    itemNo?: string;
    toolStatus?: string;
    specification?: string;
    externalId?: string;
    status: number;
    toolId?: number;
    itemId?: number;
    suitId?: number;
    terminalId?: number;
    deviceId?: string;
}
export interface RfidUpdateProperty {
    id?: number;
    idArr?: number[];
    isRepair?: boolean;
    onShelf?: number;
    checkCycle?: number;
    faSuitId?: number;
    expireTime?: number;
    remindTime?: number;
    lackPer?: number;
    lackNum?: number;
    specificationId?: number;
    enabled?: boolean;
    epc?: string;
    tid?: string;
    toolCode?: string;
    toolSpecification?: string;
    toolStatus?: string;
    inventoryStatus?: string;
    toolName?: string;
    itemNo?: string;
    specification?: string;
    externalId?: string;
    user?: string;
    status?: number;
    toolId?: number;
    itemId?: number;
    suitId?: number;
    terminalId?: number;
    deviceId?: string;
    inWarehouse?: number;
    checkTime?: number;
    checkResult2?: number;
    departmentId?: number;
    effectiveTime?: number;
    certificateNo?: number;
}
export interface RfidSelectProperty {
    deviceId?: string;
    isRepair?: boolean;
    isCharger?: number;
    autoOffPowerThreshold?: number;
    autoOffPowerDelayed?: number;
    chargeMaxDur?: number;
    chargeDur?: number;
    onShelf?: number;
    checkCycle?: number;
    faSuitId?: number;
    expireTime?: number[];
    deviceIdArr?: string[];
    remindTime?: number[];
    lackPer?: number;
    lackNum?: number;
    specificationId?: number;
    deviceIds?: string;
    deviceTypeManageType?: string;
    partDes?: string;
    toolStatus?: string;
    toolSpecification?: string;
    toolCode?: string;
    toolName?: string;
    inventoryStatus?: string;
    itemNo?: string;
    specification?: string;
    externalId?: string;
    toolArr?: string[];
    id?: number;
    enabled?: boolean;
    epc?: string;
    partNo?: string;
    tid?: string;
    user?: string;
    status?: number;
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    teamId?: number;
    toolId?: number;
    itemId?: number;
    suitId?: number;
    terminalId?: number;
    pageSize?: number;
    curPageNo?: number;
    startAt?: number;
    endAt?: number;
}
export interface RfidSelectBatchProperty {
    tidArr: string[];
    epcArr: string[];
    pageSize?: number;
    curPageNo?: number;
    startAt?: number;
    endAt?: number;
}
export interface RfidDeleteProperty {
    id?: number;
    idArr?: number[];
    isRepair?: boolean;
    onShelf?: number;
    checkCycle?: number;
    faSuitId?: number;
    expireTime?: number;
    remindTime?: number;
    lackPer?: number;
    lackNum?: number;
    specificationId?: number;
    deviceId?: string;
    toolCode?: string;
    toolSpecification?: string;
    toolName?: string;
    toolStatus?: string;
    itemNo?: string;
    specification?: string;
    externalId?: string;
    enabled?: boolean;
    epc?: string;
    tid?: string;
    user?: string;
    status?: number;
    toolId?: number;
    itemId?: number;
    suitId?: number;
    terminalId?: number;
}
export interface Rent {
    id: number;
    uid: number;
    unionid: string;
    type: number;
    totalPrice: number;
    lendTime: number;
    returnTime: number;
    deviceId: string;
    epc: string;
    toolId: number;
    phoneNo: string;
    companyId: number;
    duration: number;
    result: number;
    isReturn: boolean;
    isSettlement: boolean;
    createdAt: number;
    updatedAt: number;
}
export interface RentDeleteProperty {
    id?: number;
    uid?: number;
    totalPrice?: number;
    unionid?: string;
    deviceId?: string;
    toolId?: number;
    epc?: string;
    phoneNo?: string;
    companyId?: number;
    duration?: number;
    result?: number;
    isReturn?: boolean;
    isSettlement?: boolean;
}
export interface RentUpdateReturnProperty {
    toolId: number;
    deviceId?: string;
}
export interface RentSelectProperty extends RentDeleteProperty {
    username?: string;
    toolName?: string;
    lendTime?: number[];
    returnTime?: number[];
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface RentInsertProperty extends RentDeleteProperty {
    deviceId: string;
    toolId: number;
    lendTime: number;
    returnTime?: number;
}
export interface RentUpdateProperty extends RentDeleteProperty {
    id: number;
    time?: number;
    lendTime?: number;
    returnTime?: number;
}
export interface Transfer {
    id: number;
    transferNo: string;
    name: string;
    groupId: number;
    uid: number;
    companyId: number;
    deviceIdIn: string;
    deviceIdOut: string;
    status: number;
    deadline: number;
    createdAt: string;
    updatedAt: string;
}
export interface TransferInsertProperty {
    id?: number;
    uid?: number;
    transferNo: string;
    name?: string;
    groupId: number;
    companyId: number;
    deviceIdIn: string;
    deviceIdOut: string;
    deadline?: number;
    status: number;
}
export interface TransferDeleteProperty {
    id?: number;
    uid?: number;
    transferNo?: string;
    name?: string;
    groupId?: number;
    companyId?: number;
    deviceIdIn?: string;
    deviceIdOut?: string;
    deadline?: number;
    status?: number;
}
export interface TransferUpdateProperty {
    id: number;
    uid?: number;
    transferNo?: string;
    name?: string;
    groupId?: number;
    companyId?: number;
    deviceIdIn?: string;
    deviceIdOut?: string;
    deadline?: number;
    status?: number;
}
export interface TransferSelectProperty {
    id?: number;
    uid?: number;
    transferNo?: string;
    name?: string;
    groupId?: number;
    companyId?: number;
    deviceIdIn?: string;
    deviceIdOut?: string;
    deadline?: number;
    status?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
    deadlineStart?: number;
    deadlineEnd?: number;
}
export interface TransferItem {
    id: number;
    transferId: number;
    toolId: number;
    location: string;
    partNo: string;
    partDes: string;
    itemNo: string;
    quantity: number;
    isPutIn: boolean;
    createdAt: string;
    updatedAt: string;
}
export interface TransferItemInsertProperty {
    id?: number;
    transferId: number;
    toolId: number;
    quantity: number;
    isPutIn: boolean;
}
export interface TransferItemInsertBatchProperty {
    id?: number;
    toolArr?: number[];
    transferId: number;
    quantity: number;
    isPutIn: boolean;
}
export interface TransferItemDeleteProperty {
    id?: number;
    transferId?: number;
    toolId?: number;
    location?: string;
    partNo?: string;
    partDes?: string;
    itemNo?: string;
    quantity?: number;
    isPutIn?: boolean;
}
export interface TransferItemSelectProperty {
    id?: number;
    transferId?: number;
    toolId?: number;
    location?: string;
    partNo?: string;
    partDes?: string;
    itemNo?: string;
    quantity?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
    isPutIn?: boolean;
    transferNo?: string;
}
export interface TransferItemUpdateProperty {
    id: number;
    transferId?: number;
    toolId?: number;
    location?: string;
    partNo?: string;
    partDes?: string;
    itemNo?: string;
    quantity?: number;
    isPutIn?: boolean;
}
export interface TransferItemIdProperty {
    id: number;
}
export interface WorkOrder {
    id: number;
    uid: number;
    uid2: number;
    teamId: number;
    groupId: number;
    companyId: number;
    departmentId: number;
    managerId: number;
    user: User;
    user2: User;
    name: string;
    workorderNo: string;
    source: string;
    managerId2: number;
    signTime: number;
    firstName: string;
    phoneNo: string;
    onShelf: number;
    workorderTypeId: number;
    deviceId: string;
    status: number;
    deadline: number;
    createdAt: number;
    updatedAt: number;
}
export interface WorkOrderInsertProperty {
    id?: number;
    uid: number;
    uid2?: number;
    onShelf?: number;
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    managerId?: number;
    managerId2?: number;
    signTime?: number;
    teamId?: number;
    workorderTypeId?: number;
    name?: string;
    source?: string;
    firstName?: string;
    phoneNo?: string;
    workorderNo: string;
    deviceId: string;
    status: number;
    enabled?: boolean;
    deadline?: number;
}
export interface WorkOrderDeleteProperty {
    id?: number;
    uid?: number;
    uid2?: number;
    managerId?: number;
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    teamId?: number;
    managerId2?: number;
    signTime?: number;
    workorderTypeId?: number;
    onShelf?: number;
    name?: string;
    source?: string;
    firstName?: string;
    phoneNo?: string;
    workorderNo?: string;
    deviceId?: string;
    status?: number;
    enabled?: boolean;
    deadline?: number;
}
export interface WorkOrderUpdateProperty {
    id: number;
    uid?: number;
    onShelf?: number;
    teamId?: number;
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    managerId2?: number;
    signTime?: number;
    managerId?: number;
    workorderTypeId?: number;
    uid2?: number;
    name?: string;
    source?: string;
    firstName?: string;
    workorderNo?: string;
    phoneNo?: string;
    deviceId?: string;
    status?: number;
    enabled?: boolean;
    deadline?: number;
}
export interface WorkOrderSelectProperty {
    id?: number;
    username?: string;
    name?: string;
    managerName?: string;
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    managerName2?: string;
    source?: string;
    uid?: number;
    teamId?: number;
    managerId?: number;
    managerId2?: number;
    workorderTypeId?: number;
    rejectWorkorderTypeIdArr?: number[];
    onShelf?: number;
    uid2?: number;
    signTime?: number[];
    workorderNo?: string;
    firstName?: string;
    phoneNo?: string;
    deviceId?: string;
    status?: number;
    enabled?: boolean;
    deadline?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
    deadlineStart?: number;
    deadlineEnd?: number;
}
export interface WorkOrderDataProperty {
    type: number;
    startDate?: number;
    endDate?: number;
}
export interface WorkOrderItem {
    id: number;
    workorderId: number;
    uid: number;
    workorderNo: string;
    inventoryStatus: string;
    toolId: number;
    partId: number;
    location: string;
    partNo: string;
    partDes: string;
    specification: string;
    itemNo: string;
    batchNo: string;
    quantity: number;
    isPutIn: boolean;
    createdAt: string;
    updatedAt: string;
}
export interface WorkOrderItemInsertProperty {
    id?: number;
    workorderId?: number;
    uid?: number;
    workorderNo: string;
    inventoryStatus?: string;
    specification?: string;
    toolId?: number;
    partId?: number;
    quantity: number;
    isPutIn: boolean;
    status: boolean;
}
export interface SuitTemplateItemInsertBatchProperty {
    itemArr?: any[];
    suitTemplateId?: number;
}
export interface ProductionProcessItemInsertBatchSelectProperty {
    itemArr?: any[];
    productionProcessId?: number;
}
export interface ProductionProcessGenerateWorkorderProperty {
    productionProcessId?: number;
    workorderTypeId?: number;
    workorderName?: string;
    managerId2?: number;
    uid?: number;
    uid2?: number;
    managerId?: number;
    deadline?: number;
    closeTime?: number;
}
export interface RfidInsertBatchByEpcArrProperty {
    epcArr: string[];
    toolCodeArr?: string[];
    specificationId: number;
}
export interface RfidBindToolProperty {
    epcArr: string;
    partNo?: string;
    specificationId?: number;
    toolCodeArr?: string;
    toolId?: number;
}
export interface RfidUnbindToolProperty {
    epcArr: string;
    deleteTool?: boolean;
}
export interface WorkOrderItemInsertBatchProperty {
    uid?: number;
    workorderNo?: string;
    workorderId?: number;
    name?: string;
    deviceId?: string;
    firstName?: string;
    phoneNo?: string;
    status?: number;
    onShelf?: number;
    deadline?: number;
    toolId?: number;
    partId?: number;
    quantity?: number;
    isPutIn?: boolean;
    toolArr?: any[];
    partArr?: any[];
}
export interface WorkOrderItemUpdateProperty {
    id: number;
    workorderNo?: string;
    inventoryStatus?: string;
    uid?: number;
    workorderId?: number;
    toolId?: number;
    partId?: number;
    location?: string;
    partNo?: string;
    partDes?: string;
    specification?: string;
    itemNo?: string;
    quantity?: number;
    isPutIn?: boolean;
}
export interface WorkOrderItemDeleteProperty {
    id?: number;
    workorderNo?: string;
    inventoryStatus?: string;
    workorderId?: number;
    idArr?: number[];
    uid?: number;
    toolId?: number;
    partId?: number;
    location?: string;
    partNo?: string;
    partDes?: string;
    specification?: string;
    itemNo?: string;
    quantity?: number;
    isPutIn?: boolean;
}
export interface WorkOrderItemSelectProperty {
    id?: number;
    workorderId?: number;
    classificationStatistics?: boolean;
    workorderNo?: string;
    inventoryStatus?: string;
    uid?: number;
    toolId?: number;
    partId?: number;
    location?: string;
    toolNameOrCode?: string;
    rfidToolNameOrCode?: string;
    partName?: string;
    deviceName?: string;
    partNo?: string;
    partDes?: string;
    specification?: string;
    itemNo?: string;
    quantity?: number;
    isPutIn?: boolean;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface Bill {
    id: number;
    billNo: string;
    billType: number;
    billTypeName: string;
    itemNo: string;
    itemDesc: string;
    batchNo: string;
    num: number;
    uid: number;
    toolId: number;
    deviceId: string;
    status: number;
    description: string;
    limitTime: number[];
    createdAt: number;
    updatedAt: number;
}
export interface BillSelectProperty {
    id?: number;
    billNo?: string;
    billType?: number;
    billTypeName?: string;
    itemNo?: string;
    itemDesc?: string;
    batchNo?: string;
    num?: number;
    uid?: number;
    toolId?: number;
    deviceId?: string;
    status?: number;
    description?: string;
    limitTime?: number[];
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface BillInsertProperty {
    id?: number;
    billNo: string;
    billType: number;
    billTypeName?: string;
    itemNo?: string;
    itemDesc?: string;
    batchNo?: string;
    num?: number;
    uid?: number;
    toolId?: number;
    deviceId?: string;
    status: number;
    description?: string;
    limitTime: number;
}
export interface BillUpdateProperty {
    id: number;
    billNo?: string;
    billType?: number;
    billTypeName?: string;
    itemNo?: string;
    itemDesc?: string;
    batchNo?: string;
    num?: number;
    uid?: number;
    toolId?: number;
    deviceId?: string;
    status?: number;
    description?: string;
    limitTime?: number;
}
export interface BillDeleteProperty {
    id?: number;
    billNo?: string;
    billType?: number;
    billTypeName?: string;
    itemNo?: string;
    itemDesc?: string;
    batchNo?: string;
    num?: number;
    uid?: number;
    toolId?: number;
    deviceId?: string;
    status?: number;
    description?: string;
    limitTime?: number[];
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface Part {
    id: number;
    deviceId: string;
    name: string;
    imageInfo: string;
    num: number;
    desc: string;
    itemNo: string;
    batchNo: string;
    status: boolean;
    repairStatus: number;
    specificationId: number;
    deviceTypeId: number;
    taxPrice: number;
    groupId: number;
    companyId: number;
    departmentId: number;
    taxRate: number;
    preInspectionStatus: number;
    type: string;
    createdAt: string;
    updatedAt: string;
    typeId: number;
}
export interface PartProperty {
    type?: number;
    preInspectionStatus?: number;
    repairStatus?: number;
    status?: boolean;
    batchNo?: string;
    itemNo?: string;
    desc?: string;
    num?: number;
    price?: number;
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    package?: number;
    packageQty?: number;
    typeId?: number;
    specificationId?: number;
    deviceTypeId?: number;
    taxPrice?: number;
    taxRate?: number;
    imageInfo?: string;
    name?: string;
    deviceId?: string;
    id?: number;
}
export interface PartSelectProperty extends PartProperty {
    deviceTypeKind?: string;
    notInTool?: boolean;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface PartInsertProperty extends PartProperty {
    itemNo: string;
}
export interface PartUpdateProperty extends PartInsertProperty {
    id: number;
}
export interface PartDeleteProperty {
    notInTool?: boolean;
    id: number;
}
/**
 * 批量插入rfid更新
 * @param params
 */
export interface rfidUpdateBatchParamType extends RfidUpdateProperty {
    idArr: number[];
}
export interface WorkorderLockerOrderProperty {
    orderId: string;
    consignee: string;
    mobile: string;
    pickupCode: string;
    orderDetails: any[];
}
export interface WorkorderLockerOrderCancelProperty {
    orderDetails: any[];
    warehouseCode: string;
    orderId: string;
}
export interface commonProperty {
    startAt?: number;
    endAt?: number;
    type?: string;
}
export interface BindParentToolProperty {
    toolIdArr: number[];
    parentToolId: number;
    bindType?: number;
}
export interface RfidShelfProperty {
    epcArr?: string[];
    tidArr?: string[];
    uid?: number;
    toolId: number;
    deviceId: string;
    phoneNo?: string;
    username?: string;
    onShelf: number;
    time?: number;
}
export declare function Tc(service: any, isDebugMode?: boolean, isAesToStr?: boolean): {
    type: Request<Type, TypeInsertProperty, TypeDeleteProperty, TypeUpdateProperty, TypeSelectProperty>;
    specifications: Request<Specifications, SpecificationsInsertProperty, SpecificationsDeleteProperty, SpecificationsUpdateProperty, SpecificationsSelectProperty>;
    item: Request<Item, ItemInsertProperty, ItemDeleteProperty, ItemUpdateProperty, ItemSelectProperty>;
    suit: Request<Suit, SuitInsertProperty, SuitDeleteProperty, SuitUpdateProperty, SuitSelectProperty>;
    suit_template: Request<SuitTemplate, SuitTemplateInsertProperty, SuitTemplateDeleteProperty, SuitTemplateUpdateProperty, SuitTemplateSelectProperty>;
    suit_template_item: Request<SuitTemplateItem, SuitTemplateItemInsertProperty, SuitTemplateItemDeleteProperty, SuitTemplateItemUpdateProperty, SuitTemplateItemSelectProperty>;
    recycling_type: Request<RecyclingType, RecyclingTypeInsertProperty, RecyclingTypeDeleteProperty, RecyclingTypeUpdateProperty, RecyclingTypeSelectProperty>;
    workorder_type: Request<WorkorderType, WorkorderTypeInsertProperty, WorkorderTypeDeleteProperty, WorkorderTypeUpdateProperty, WorkorderTypeSelectProperty>;
    car_model: Request<CarModel, CarModelInsertProperty, CarModelDeleteProperty, CarModelUpdateProperty, CarModelSelectProperty>;
    production_process: Request<ProductionProcess, ProductionProcessInsertProperty, ProductionProcessDeleteProperty, ProductionProcessUpdateProperty, ProductionProcessSelectProperty>;
    production_process_item: Request<ProductionProcessItem, ProductionProcessItemInsertProperty, ProductionProcessItemDeleteProperty, ProductionProcessItemUpdateProperty, ProductionProcessItemSelectProperty>;
    supplies: Request<Supplies, SuppliesInsertProperty, SuppliesDeleteProperty, SuppliesUpdateProperty, SuppliesSelectProperty>;
    organizational_inventory: Request<OrganizationalInventory, OrganizationalInventoryInsertProperty, OrganizationalInventoryDeleteProperty, OrganizationalInventoryUpdateProperty, OrganizationalInventorySelectProperty>;
    tool: Request<Tool, ToolInsertProperty, ToolDeleteProperty, ToolUpdateProperty, ToolSelectProperty>;
    rfid: Request<Rfid, RfidInsertProperty, RfidDeleteProperty, RfidUpdateProperty, RfidSelectProperty>;
    rent: Request<Rent, RentInsertProperty, RentDeleteProperty, RentUpdateProperty, RentSelectProperty>;
    transfer: Request<Transfer, TransferInsertProperty, TransferDeleteProperty, TransferUpdateProperty, TransferSelectProperty>;
    transfer_item: Request<TransferItem, TransferItemInsertProperty, TransferItemDeleteProperty, TransferItemUpdateProperty, TransferItemSelectProperty>;
    workorder: Request<WorkOrder, WorkOrderInsertProperty, WorkOrderDeleteProperty, WorkOrderUpdateProperty, WorkOrderSelectProperty>;
    workorder_item: Request<WorkOrderItem, WorkOrderItemInsertProperty, WorkOrderItemDeleteProperty, WorkOrderItemUpdateProperty, WorkOrderItemSelectProperty>;
    bill: Request<Bill, BillInsertProperty, BillDeleteProperty, BillUpdateProperty, BillSelectProperty>;
    part: Request<Part, PartInsertProperty, PartDeleteProperty, PartUpdateProperty, PartSelectProperty>;
    getVersion: (service: AxiosInstance) => Promise<any>;
    insertTransferItemBatch: (service: AxiosInstance) => (json: TransferItemInsertBatchProperty) => Promise<{
        code: number;
        data: TransferItem[];
    }>;
    /**
     * 查询工具借用表
     * @param json
     */
    insertToolBatch: (json: ToolInsertBatchProperty) => Promise<{
        code: number;
        data: Tool[];
    }>;
    chartData: (params: {
        type;
    }) => Promise<import("../request").IResType<unknown>>;
    itemExportData: (params: ItemSelectProperty) => Promise<import("../request").IResType<unknown>>;
    /**
     * 生成工单和工单详情
     * @param params
     */
    workorderItemInit: (params: any) => Promise<unknown[]>;
    workorderPro: (params: commonProperty) => Promise<any>;
    locationStatus: (params: commonProperty) => Promise<any>;
    unInspectTop: (params: commonProperty) => Promise<any>;
    receivedTop: (params: commonProperty) => Promise<any>;
    inspectTop: (params: commonProperty) => Promise<any>;
    depPreInspectStatistics: (params: commonProperty) => Promise<any>;
    depPreInspectPro: (params: commonProperty) => Promise<any>;
    depPreInspectProByWeek: (params: commonProperty) => Promise<any>;
    totalWorkorderNumAndOther: (params: commonProperty) => Promise<any>;
    bindParentTool: (params: BindParentToolProperty) => Promise<any>;
    rfidShelf: (params: RfidShelfProperty) => Promise<any>;
    workorderItemInsertBatch: (params: WorkOrderItemInsertBatchProperty) => Promise<any>;
    suitTemplateItemInsertBatch: (params: SuitTemplateItemInsertBatchProperty) => Promise<any>;
    productionProcessItemInsertBatch: (params: ProductionProcessItemInsertBatchSelectProperty) => Promise<any>;
    productionProcessGenerateWorkorder: (params: ProductionProcessGenerateWorkorderProperty) => Promise<any>;
    rfidInsertBatchByEpcArr: (params: RfidInsertBatchByEpcArrProperty) => Promise<any>;
    rfidBindTool: (params: RfidBindToolProperty) => Promise<any>;
    rfidUnbindTool: (params: RfidUnbindToolProperty) => Promise<any>;
    suitGetCode: (params: any) => Promise<any>;
    suitTemplateGetCode: (params: any) => Promise<any>;
    generateToolByParentTool: (params: any) => Promise<any>;
    rfidUpdateBatch: (params: rfidUpdateBatchParamType) => Promise<any>;
    workorderItemUpdateBatch: (params: {
        itemArr: any[];
    }) => Promise<any>;
    toolResetData: (params: any) => Promise<any>;
    workorderLockerOrder: (params: WorkorderLockerOrderProperty) => Promise<any>;
    workorderLockerOrderCancel: (params: WorkorderLockerOrderCancelProperty) => Promise<any>;
    rfidClassificationStatistics: (params: {
        epcArr: string[];
        deviceId: string;
    }) => Promise<any>;
    rfidStatus: (params: any) => Promise<any>;
};
