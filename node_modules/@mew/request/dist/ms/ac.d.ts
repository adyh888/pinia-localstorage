import { Request } from "../request";
import { EmailTemplate, EmailTemplateDeleteProperty, EmailTemplateInsertProperty, EmailTemplateSelectProperty, EmailTemplateUpdateProperty, SendEmailCustomProperty, SendEmailProperty } from "./lc";
export interface Process {
    endTime?: number;
    startTime?: number;
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    managerId?: number;
    uid?: number;
    uid2?: number;
    mainStatus?: string;
    mark?: string;
    reason?: string;
    nextProcessId?: number;
    curProcessStatus?: boolean;
    curProcessId?: number;
    lastProcessStatus?: boolean;
    lastProcessId?: number;
    goodsId?: number;
    itemId?: number;
    toolId?: number;
    workorderNo?: string;
    deviceId?: string;
    id?: number;
}
export interface ProcessSelectProperty extends Process {
    toolCode?: string;
    toolName?: string;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface ProcessUpdateProperty extends Process {
    id: number;
}
export interface ProcessInsertProperty extends Process {
    curProcessStatus: boolean;
    curProcessId: number;
}
export interface ProcessNextProperty {
    processTypeId?: number;
    lastProcessStatus?: number;
    endTime?: number;
    startTime?: number;
    uid?: number;
    managerId?: number;
    uid2?: number;
    departmentId?: number;
    idArr?: any[];
    mark?: string;
    status?: string;
    reason?: string;
}
export interface ProcessStartProperty {
    endTime?: number;
    startTime?: number;
    processTypeId: number;
    processStatus?: number;
    companyId?: number;
    departmentId?: number;
    deviceId?: string;
    mark?: string;
    status?: string;
    reason?: string;
    uid?: number;
    managerId?: number;
    uid2?: number;
    idArr: any[];
}
export interface ProcessDeleteProperty extends Process {
    id: number;
}
export interface ProcessType {
    groupId?: number;
    companyId?: number;
    deviceTypeId?: number;
    order?: number;
    childProcessName?: string;
    fatherProcessName?: string;
    nextProcessType?: string;
    id?: number;
    childProcessNameStatic?: string;
}
export interface ProcessTypeSelectProperty extends ProcessType {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface ProcessTypeUpdateProperty extends ProcessType {
    id: number;
}
export interface ProcessTypeInsertProperty extends ProcessType {
    deviceTypeId: number;
    order: number;
    childProcessName: string;
    fatherProcessName: string;
}
export interface ProcessTypeDeleteProperty extends ProcessType {
    id: number;
}
export interface File {
    status: number;
    mark: string;
    path: string;
    companyId: number;
    groupId: number;
    uid: number;
    deviceId: string;
    kind: string;
    type: string;
    name: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface FileProperty {
    status?: number;
    mark?: string;
    path?: string;
    companyId?: number;
    groupId?: number;
    uid?: number;
    deviceId?: string;
    kind?: string;
    type?: string;
    name?: string;
    id?: number;
}
export interface FileSelectProperty extends FileProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface FileUpdateProperty extends FileProperty {
    id: number;
}
export interface FileInsertProperty extends FileProperty {
    status: number;
    type: string;
    name: string;
}
export interface FileDeleteProperty extends FileProperty {
    id: number;
    deleteFile?: boolean;
}
export interface Setting {
    order: number;
    teamId: number;
    departmentId: number;
    groupId: number;
    companyId: number;
    modifyUser: string;
    description: string;
    groupBy: string;
    deviceId: string;
    parentSetting: string;
    defaultVal: number;
    deviceTypeId: number;
    actualVal: number;
    code: string;
    name: string;
    val2: string;
    val3: string;
    val4: string;
    val5: string;
    id: number;
    val1: number;
    startAt?: number;
    endAt?: number;
}
export interface SettingProperty {
    order?: number;
    teamId?: number;
    departmentId?: number;
    groupId?: number;
    val2?: string;
    val3?: string;
    val4?: string;
    val5?: string;
    val1?: number;
    companyId?: number;
    deviceTypeId?: number;
    modifyUser?: string;
    deviceId?: string;
    parentSetting?: string;
    groupBy?: string;
    name?: string;
    description?: string;
    defaultVal?: number;
    actualVal?: number;
    code?: string;
    id?: number;
}
export interface SettingSelectProperty extends SettingProperty {
    deviceTypeName?: string;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface SettingUpdateProperty extends SettingProperty {
    id: number;
}
export interface SettingInsertProperty extends SettingProperty {
    groupId: number;
    code: string;
    deviceIdArr?: string[];
    codeArr?: string[];
}
export interface SettingDeleteProperty extends SettingProperty {
    id: number;
}
export interface Carousel {
    teamId: number;
    departmentId: number;
    groupId: number;
    companyId: number;
    modifyUser: string;
    description: string;
    jumpUrl: string;
    imageUrl: string;
    enabled: boolean;
    orderNum: number;
    groupBy: string;
    name: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface CarouselProperty {
    teamId?: number;
    departmentId?: number;
    groupId?: number;
    companyId?: number;
    modifyUser?: string;
    description?: string;
    jumpUrl?: string;
    imageUrl?: string;
    enabled?: boolean;
    orderNum?: number;
    groupBy?: string;
    name?: string;
    id?: number;
}
export interface CarouselSelectProperty extends CarouselProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface CarouselUpdateProperty extends CarouselProperty {
    id: number;
}
export interface CarouselInsertProperty extends CarouselProperty {
    groupId: number;
    enabled: boolean;
}
export interface CarouselDeleteProperty extends CarouselProperty {
    id: number;
    deleteFile?: boolean;
}
export interface Notice {
    teamId: number;
    paramId: number;
    departmentId: number;
    groupId: number;
    companyId: number;
    i18nId: number;
    checkUsers: string;
    mark: string;
    description: string;
    params: string;
    kind: string;
    type: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface NoticeProperty {
    teamId?: number;
    paramId?: number;
    departmentId?: number;
    groupId?: number;
    companyId?: number;
    i18nId?: number;
    checkUsers?: string;
    mark?: string;
    description?: string;
    params?: string;
    kind?: string;
    type?: string;
    id?: number;
}
export interface NoticeReadProperty {
    managerId: number;
    noticeIdArr: number[];
}
export interface NewDetailProperty {
    url: string;
}
export interface NoticeSelectProperty extends NoticeProperty {
    managerId?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface NoticeUpdateProperty extends NoticeProperty {
    id: number;
}
export interface NoticeInsertProperty extends NoticeProperty {
    type: string;
}
export interface NoticeDeleteProperty extends NoticeProperty {
    id: number;
}
export interface ProcessCustom {
    groupId: number;
    companyId: number;
    departmentId: number;
    teamId: number;
    managerId2: number;
    managerId: number;
    description: string;
    ProcessCustomName: string;
    uuid: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface ProcessCustomProperty {
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    teamId?: number;
    managerId2?: number;
    managerId?: number;
    description?: string;
    ProcessCustomName?: string;
    uuid?: string;
    id?: number;
}
export interface ProcessCustomSelectProperty extends ProcessCustomProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface ProcessCustomUpdateProperty extends ProcessCustomProperty {
    id: number;
}
export interface ProcessCustomInsertProperty extends ProcessCustomProperty {
    groupId: number;
    ProcessCustomName: string;
}
export interface ProcessCustomDeleteProperty extends ProcessCustomProperty {
    id: number;
}
export interface ProcessCustomItem {
    groupId: number;
    companyId: number;
    departmentId: number;
    teamId: number;
    managerId2: number;
    managerId: number;
    nextProcessCustomConditionIds: string;
    nextProcessCustomItemIds: string;
    size: string;
    position: string;
    description: string;
    ProcessTypeId: number;
    ProcessCustomId: number;
    uuid: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface ProcessCustomItemProperty {
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    teamId?: number;
    managerId2?: number;
    managerId?: number;
    nextProcessCustomConditionIds?: string;
    nextProcessCustomItemIds?: string;
    size?: string;
    position?: string;
    description?: string;
    ProcessTypeId?: number;
    ProcessCustomId?: number;
    uuid?: string;
    id?: number;
}
export interface ProcessCustomItemInsertBatchProperty {
    processCustomId?: number;
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    teamId?: number;
    managerId2?: number;
    managerId?: number;
    itemArr: any[];
}
export interface ProcessCustomItemSelectProperty extends ProcessCustomItemProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface ProcessCustomItemUpdateProperty extends ProcessCustomItemProperty {
    id: number;
}
export interface ProcessCustomItemInsertProperty extends ProcessCustomItemProperty {
    groupId: number;
}
export interface ProcessCustomItemDeleteProperty extends ProcessCustomItemProperty {
    id: number;
}
export interface ProcessCustomCondition {
    groupId: number;
    companyId: number;
    departmentId: number;
    teamId: number;
    managerId2: number;
    managerId: number;
    FaiProcessCustomItemId: number;
    SucProcessCustomItemId: number;
    ProcessCustomItemId: number;
    condition3: string;
    compareCon: string;
    condition2: string;
    condition1: string;
    description: string;
    uuid: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface ProcessCustomConditionProperty {
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    teamId?: number;
    managerId2?: number;
    managerId?: number;
    FaiProcessCustomItemId?: number;
    SucProcessCustomItemId?: number;
    ProcessCustomItemId?: number;
    condition3?: string;
    compareCon?: string;
    condition2?: string;
    condition1?: string;
    description?: string;
    uuid?: string;
    id?: number;
}
export interface ProcessCustomConditionSelectProperty extends ProcessCustomConditionProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface ProcessCustomConditionUpdateProperty extends ProcessCustomConditionProperty {
    id: number;
}
export interface ProcessCustomConditionInsertProperty extends ProcessCustomConditionProperty {
    groupId: number;
    ProcessCustomItemId: number;
}
export interface ProcessCustomConditionDeleteProperty extends ProcessCustomConditionProperty {
    id: number;
}
export interface I18n {
    teamId: number;
    departmentId: number;
    groupId: number;
    companyId: number;
    uid: string;
    tw: string;
    ge: string;
    fr: string;
    en: string;
    content: string;
    kind: string;
    type: string;
    uuid: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface I18nProperty {
    teamId?: number;
    departmentId?: number;
    groupId?: number;
    companyId?: number;
    uid?: string;
    tw?: string;
    ge?: string;
    fr?: string;
    en?: string;
    content?: string;
    kind?: string;
    type?: string;
    uuid?: string;
    id?: number;
}
export interface I18nSelectProperty extends I18nProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface I18nUpdateProperty extends I18nProperty {
    id: number;
}
export interface I18nInsertProperty extends I18nProperty {
    content: string;
}
export interface I18nDeleteProperty extends I18nProperty {
    id: number;
}
export interface Alarm {
    id: number;
    type: string;
    name: string;
    grade: string;
    describe: string;
    timespan: number;
    alarmLength: number;
    enabled: boolean;
    companyId: number;
    groupId: number;
    departmentId: number;
    teamId: number;
    alarmTime: Date;
    createdAt: string;
    updatedAt: string;
}
export interface AlarmInsertProperty {
    id?: number;
    type: string;
    name: string;
    grade: string;
    describe: string;
    timespan?: number;
    alarmLength?: number;
    companyId?: number;
    departmentId?: number;
    teamId?: number;
    groupId?: number;
    enabled: boolean;
    alarmTime?: number;
}
export interface AlarmDeleteProperty {
    id?: number;
    type?: string;
    name?: string;
    grade?: string;
    describe?: string;
    timespan?: number;
    alarmLength?: number;
    companyId?: number;
    departmentId?: number;
    teamId?: number;
    groupId?: number;
    enabled?: boolean;
    alarmTime?: number;
}
export interface AlarmUpdateProperty {
    id: number;
    type?: string;
    name?: string;
    grade?: string;
    describe?: string;
    timespan?: number;
    alarmLength?: number;
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    teamId?: number;
    enabled?: boolean;
    alarmTime?: number;
}
export interface AlarmSelectProperty {
    id?: number;
    type?: string;
    name?: string;
    grade?: string;
    describe?: string;
    timespan?: number;
    alarmLength?: number;
    companyId?: number;
    departmentId?: number;
    teamId?: number;
    groupId?: number;
    companyName?: string;
    enabled?: boolean;
    curPageNo?: number;
    pageSize?: number;
    alarmTime?: Date;
    startAt?: number;
    endAt?: number;
}
export interface Feedback {
    id: number;
    companyId: number;
    deviceTypeId: number;
    type: string;
    deviceId: string;
    name: string;
    desc: string;
    enabled: boolean;
    createdAt: string;
    updatedAt: string;
}
export interface FeedbackInsertProperty {
    id?: number;
    companyId?: number;
    deviceTypeId?: number;
    deviceId?: string;
    type?: string;
    desc?: string;
    name?: string;
    enabled?: boolean;
}
export interface FeedbackDeleteProperty {
    id?: number;
    companyId?: number;
    type?: string;
    deviceTypeId?: number;
    deviceId?: string;
    desc?: string;
    name?: string;
    enabled?: boolean;
}
export interface FeedbackUpdateProperty {
    id: number;
    companyId?: number;
    type?: string;
    deviceTypeId?: number;
    deviceId?: string;
    desc?: string;
    name?: string;
    enabled?: boolean;
}
export interface FeedbackSelectProperty {
    id?: number;
    companyId?: number;
    groupId?: number;
    deviceTypeId?: number;
    deviceId?: string;
    inOrder?: boolean;
    type?: string;
    desc?: string;
    name?: string;
    enabled?: boolean;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface Task {
    taskType: number;
    taskName: string;
    status: number;
    username: string;
    mark: string;
    warehouse: string;
    location: string;
    uid: number;
    uid2: number;
    deadline?: number;
    workorderNo: string;
    id: number;
    createdAt: number;
    updatedAt: number;
}
export interface TaskSelectProperty {
    taskType?: number;
    taskName?: string;
    status?: number;
    username?: string;
    mark?: string;
    warehouse?: string;
    location?: string;
    uid?: number;
    uid2?: number;
    operationUid?: number;
    taskTypeArr?: number;
    statusArr?: number;
    deadline?: number;
    workorderNo?: string;
    id?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface TaskInsertProperty {
    status: number;
    username?: string;
    uid: number;
    deadline?: number;
    uid2?: number;
    operationUid?: number;
    taskName?: string;
    taskType: number;
    mark?: number;
    warehouse?: number;
    location?: number;
    workorderNo: string;
    id?: number;
}
export interface TaskUpdateProperty {
    taskType?: number;
    taskName?: string;
    status?: number;
    username?: string;
    mark?: string;
    warehouse?: string;
    location?: string;
    uid?: number;
    operationUid?: number;
    uid2?: number;
    deadline?: number;
    workorderNo?: string;
    id: number;
}
export interface TaskDeleteProperty {
    taskType?: number;
    taskName?: string;
    status?: number;
    warehouse?: string;
    username?: string;
    location?: string;
    mark?: string;
    uid?: number;
    operationUid?: number;
    uid2?: number;
    deadline?: number;
    workorderNo?: string;
    id: number;
}
export interface MessageNoticeProperty {
    phoneNo: string;
    text: string;
}
export interface CarouselDeleteFileProperty {
    fileName: string;
}
export interface InsertBatchProperty {
    arr: any[];
}
export declare function Ac(service: any, isDebugMode?: boolean, isAesToStr?: boolean): {
    email_template: Request<EmailTemplate, EmailTemplateInsertProperty, EmailTemplateDeleteProperty, EmailTemplateUpdateProperty, EmailTemplateSelectProperty>;
    process: Request<Process, ProcessInsertProperty, ProcessDeleteProperty, ProcessUpdateProperty, ProcessSelectProperty>;
    process_type: Request<ProcessType, ProcessTypeInsertProperty, ProcessTypeDeleteProperty, ProcessTypeUpdateProperty, ProcessTypeSelectProperty>;
    file: Request<File, FileInsertProperty, FileDeleteProperty, FileUpdateProperty, FileSelectProperty>;
    setting: Request<Setting, SettingInsertProperty, SettingDeleteProperty, SettingUpdateProperty, SettingSelectProperty>;
    carousel: Request<Carousel, CarouselInsertProperty, CarouselDeleteProperty, CarouselUpdateProperty, CarouselSelectProperty>;
    notice: Request<Notice, NoticeInsertProperty, NoticeDeleteProperty, NoticeUpdateProperty, NoticeSelectProperty>;
    process_custom: Request<ProcessCustom, ProcessCustomInsertProperty, ProcessCustomDeleteProperty, ProcessCustomUpdateProperty, ProcessCustomSelectProperty>;
    process_custom_item: Request<ProcessCustomItem, ProcessCustomItemInsertProperty, ProcessCustomItemDeleteProperty, ProcessCustomItemUpdateProperty, ProcessCustomItemSelectProperty>;
    process_custom_condition: Request<ProcessCustomCondition, ProcessCustomConditionInsertProperty, ProcessCustomConditionDeleteProperty, ProcessCustomConditionUpdateProperty, ProcessCustomConditionSelectProperty>;
    i18n: Request<I18n, I18nInsertProperty, I18nDeleteProperty, I18nUpdateProperty, I18nSelectProperty>;
    task: Request<Task, TaskInsertProperty, TaskDeleteProperty, TaskUpdateProperty, TaskSelectProperty>;
    alarm: Request<Alarm, AlarmInsertProperty, AlarmDeleteProperty, AlarmUpdateProperty, AlarmSelectProperty>;
    feedback: Request<Feedback, FeedbackInsertProperty, FeedbackDeleteProperty, FeedbackUpdateProperty, FeedbackSelectProperty>;
    getVersion: () => Promise<{
        code: number;
        msg: string;
        data: string;
    }>;
    processNext: (json: ProcessNextProperty) => Promise<any>;
    noticeRead: (json: NoticeReadProperty) => Promise<any>;
    getNewList: () => Promise<any>;
    getNewDetail: (json: NewDetailProperty) => Promise<any>;
    noticeStatistical: (json: NoticeSelectProperty) => Promise<any>;
    processStart: (json: ProcessStartProperty) => Promise<any>;
    messageNotice: (json: MessageNoticeProperty) => Promise<any>;
    carouselDeleteFile: (json: CarouselDeleteFileProperty) => Promise<any>;
    feedbackInsertBatch: (json: InsertBatchProperty) => Promise<any>;
    alarmInsertBatch: (json: InsertBatchProperty) => Promise<any>;
    i18nInsertBatch: (json: InsertBatchProperty) => Promise<any>;
    apkGetNotice: (json: {
        deviceId: string;
    }) => Promise<any>;
    getTaskNumber: (json: InsertBatchProperty) => Promise<any>;
    processTypeUpdateBatch: (json: {
        itemArr: any[];
    }) => Promise<any>;
    commonExport: (json: {
        callback: string;
        selectParams: any;
        tableInfo: any[];
        title: string;
    }) => Promise<any>;
    processCustomItemInsertBatch: (json: ProcessCustomItemInsertBatchProperty) => Promise<any>;
    processCustomItemUpdateBatch: (json: {
        itemArr: any[];
    }) => Promise<any>;
    generateUUID: (json: {}) => Promise<any>;
    sendEmail: (json: SendEmailProperty) => Promise<any>;
    sendEmailCustom: (json: SendEmailCustomProperty) => Promise<any>;
    generateLanguage: (json: {}) => Promise<any>;
    deleteUselessDeviceUser: (json: {}) => Promise<any>;
    delCache: (json: {
        key: string;
    }) => Promise<any>;
};
