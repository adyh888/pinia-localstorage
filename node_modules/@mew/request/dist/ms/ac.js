"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Ac = void 0;
var request_1 = require("../request");
function Ac(service, isDebugMode, isAesToStr) {
    if (isDebugMode === void 0) { isDebugMode = false; }
    if (isAesToStr === void 0) { isAesToStr = false; }
    return {
        email_template: new request_1.Request('/lc/email_template', service, isDebugMode, isAesToStr),
        process: new request_1.Request('/ac/process', service, isDebugMode, isAesToStr),
        process_type: new request_1.Request('/ac/process_type', service, isDebugMode, isAesToStr),
        file: new request_1.Request('/ac/file', service, isDebugMode, isAesToStr),
        setting: new request_1.Request('/ac/setting', service, isDebugMode, isAesToStr),
        carousel: new request_1.Request('/ac/carousel', service, isDebugMode, isAesToStr),
        notice: new request_1.Request('/ac/notice', service, isDebugMode, isAesToStr),
        process_custom: new request_1.Request('/ac/process_custom', service, isDebugMode),
        process_custom_item: new request_1.Request('/ac/process_custom_item', service, isDebugMode),
        process_custom_condition: new request_1.Request('/ac/process_custom_condition', service, isDebugMode),
        i18n: new request_1.Request('/ac/i18n', service, isDebugMode),
        // class
        task: new request_1.Request('/ac/task', service, isDebugMode, isAesToStr),
        alarm: new request_1.Request('/ac/alarm', service, isDebugMode, isAesToStr),
        feedback: new request_1.Request('/ac/feedback', service, isDebugMode, isAesToStr),
        // function
        getVersion: function () { return request_1.mewRequest('/ac/select/version', {}, 'POST', service, isDebugMode, isAesToStr); },
        processNext: function (json) { return request_1.mewRequest('/ac/process/next', json, 'POST', service, isDebugMode, isAesToStr); },
        noticeRead: function (json) { return request_1.mewRequest('/ac/notice/read', json, 'POST', service, isDebugMode, isAesToStr); },
        getNewList: function () { return request_1.mewRequest('/ac/common/getNewList', {}, 'GET', service, isDebugMode, isAesToStr); },
        getNewDetail: function (json) { return request_1.mewRequest('/ac/common/getNewDetail', json, 'POST', service, isDebugMode, isAesToStr); },
        noticeStatistical: function (json) { return request_1.mewRequest('/ac/notice/statistical', json, 'POST', service, isDebugMode, isAesToStr); },
        processStart: function (json) { return request_1.mewRequest('/ac/process/start', json, 'POST', service, isDebugMode, isAesToStr); },
        messageNotice: function (json) { return request_1.mewRequest('/ac/message/message_notice', json, 'POST', service, isDebugMode, isAesToStr); },
        carouselDeleteFile: function (json) { return request_1.mewRequest('/ac/carousel/delete/file', json, 'POST', service, isDebugMode, isAesToStr); },
        feedbackInsertBatch: function (json) { return request_1.mewRequest('/ac/feedback/insert/batch', json, 'POST', service, isDebugMode, isAesToStr); },
        alarmInsertBatch: function (json) { return request_1.mewRequest('/ac/alarm/insert/batch', json, 'POST', service, isDebugMode, isAesToStr); },
        i18nInsertBatch: function (json) { return request_1.mewRequest('/ac/i18n/insert/batch', json, 'POST', service, isDebugMode, isAesToStr); },
        apkGetNotice: function (json) { return request_1.mewRequest('/ac/common/apkGetNotice', json, 'POST', service, isDebugMode, isAesToStr); },
        getTaskNumber: function (json) { return request_1.mewRequest('/ac/task/get_task_number', json, 'POST', service, isDebugMode, isAesToStr); },
        processTypeUpdateBatch: function (json) { return request_1.mewRequest('/ac/process_type/update/batch', json, 'POST', service, isDebugMode, isAesToStr); },
        commonExport: function (json) { return request_1.mewRequest('/ac/common/export', json, 'POST', service, isDebugMode, isAesToStr); },
        processCustomItemInsertBatch: function (json) { return request_1.mewRequest('/ac/process_custom_item/insert/batch', json, 'POST', service, isDebugMode, isAesToStr); },
        processCustomItemUpdateBatch: function (json) { return request_1.mewRequest('/ac/process_custom_item/update/batch', json, 'POST', service, isDebugMode, isAesToStr); },
        generateUUID: function (json) { return request_1.mewRequest('/ac/common/generateUUID', json, 'POST', service, isDebugMode, isAesToStr); },
        sendEmail: function (json) { return request_1.mewRequest('/ac/email_template/sendEmail', json, 'POST', service, isDebugMode, isAesToStr); },
        sendEmailCustom: function (json) { return request_1.mewRequest('/ac/email_template/sendEmailCustom', json, 'POST', service, isDebugMode, isAesToStr); },
        generateLanguage: function (json) { return request_1.mewRequest('/ac/common/generateLanguage', json, 'POST', service, isDebugMode, isAesToStr); },
        deleteUselessDeviceUser: function (json) { return request_1.mewRequest('/ac/common/delUselessDeviceUser', json, 'POST', service, isDebugMode, isAesToStr); },
        delCache: function (json) { return request_1.mewRequest('/ac/common/delCache', json, 'POST', service, isDebugMode, isAesToStr); },
    };
}
exports.Ac = Ac;
