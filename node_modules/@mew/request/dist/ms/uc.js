"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Uc = void 0;
var tslib_1 = require("tslib");
var request_1 = require("../request");
function Uc(service, isDebugMode, isAesToStr) {
    var _this = this;
    if (isDebugMode === void 0) { isDebugMode = false; }
    if (isAesToStr === void 0) { isAesToStr = false; }
    return {
        role: new request_1.Request('/uc/role', service, isDebugMode, isAesToStr),
        personnel: new request_1.Request('/uc/personnel', service, isDebugMode, isAesToStr),
        address: new request_1.Request('/uc/address', service, isDebugMode, isAesToStr),
        access: new request_1.Request('/uc/access', service, isDebugMode, isAesToStr),
        // TODO: role_access: new Request<RoleAccess, RoleAccessInsertProperty, RoleAccessDeleteProperty, RoleAccessUpdateProperty, RoleAccessSelectProperty>('/mc/role_access', service, isDebugMode),
        user_tool: new request_1.Request('/uc/user_tool', service, isDebugMode, isAesToStr),
        role_tool_access: new request_1.Request('/uc/role_tool_access', service, isDebugMode, isAesToStr),
        occupation: new request_1.Request('/uc/occupation', service, isDebugMode, isAesToStr),
        position: new request_1.Request('/uc/position', service, isDebugMode, isAesToStr),
        // class
        rfid: new request_1.Request('/gc/rfid', service, isDebugMode, isAesToStr),
        user: new request_1.Request('/uc/user', service, isDebugMode, isAesToStr),
        device_user: new request_1.Request('/uc/device_user', service, isDebugMode, isAesToStr),
        card: new request_1.Request('/uc/card', service, isDebugMode, isAesToStr),
        finger: new request_1.Request('/uc/finger', service, isDebugMode, isAesToStr),
        face: new request_1.Request('/uc/face', service, isDebugMode, isAesToStr),
        wx: new request_1.Request('/uc/wx', service, isDebugMode, isAesToStr),
        wx_user: new request_1.Request('/uc/wx_user', service, isDebugMode, isAesToStr),
        ding_talk_user: new request_1.Request('/uc/ding_talk_user', service, isDebugMode, isAesToStr),
        village: new request_1.Request('/uc/village', service, isDebugMode, isAesToStr),
        user_company: new request_1.Request('/uc/user_company', service, isDebugMode, isAesToStr),
        user_department: new request_1.Request('/uc/user_department', service, isDebugMode, isAesToStr),
        user_group: new request_1.Request('/uc/user_group', service, isDebugMode, isAesToStr),
        user_team: new request_1.Request('/uc/user_team', service, isDebugMode, isAesToStr),
        rank: new request_1.Request('/uc/rank', service, isDebugMode, isAesToStr),
        device_role_access: new request_1.Request('/uc/device_role_access', service, isDebugMode, isAesToStr),
        // function
        getVersion: function () { return request_1.mewRequest('/gc/select/version', {}, 'POST', service, isDebugMode, isAesToStr); },
        registerUser: function (json) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var res;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, request_1.mewMsPost("/uc/user/register", json, service, isDebugMode, isAesToStr)];
                        case 1:
                            res = _a.sent();
                            return [2 /*return*/, {
                                    code: res.code,
                                    msg: res.msg,
                                    data: res.data
                                }];
                    }
                });
            });
        },
        //批量删除
        roleToolAccessBatchDelete: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest('/uc/role_tool_access/delete/batch', params, 'POST', service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        deviceInfoGroupByType: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest('/uc/user/deviceInfoGroupByType', params, 'POST', service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        //user_tool批量插入
        userToolInsertBatch: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest('/uc/user_tool/insert/batch', params, 'POST', service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        //登陆
        doFirstLoginCard: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request_1.mewRequest('/uc/doFirstLogin/card', params, 'POST', service, isDebugMode, isAesToStr)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); },
        modifyUser: function (json) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var res;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, request_1.mewMsPost("/uc/user/modify", json, service, isDebugMode, isAesToStr)];
                        case 1:
                            res = _a.sent();
                            return [2 /*return*/, {
                                    code: res.code,
                                    data: res.data
                                }];
                    }
                });
            });
        }
    };
}
exports.Uc = Uc;
