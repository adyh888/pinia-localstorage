import {Access, AuthData, Mc} from "../../src/ms/mc";
import axios from "axios";
import {AxiosEnv, Tc, Uc, Dc, mewMsPost} from "../../src/main";
import {IResType} from "../../src/request";
import * as _ from "lodash"

// 自定义条件
const baseURL = 'http://www.mew-iot.cn:50200'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let tc
let uc
let mc
let dc

describe('access', () => {
    beforeEach(async () => {
        mc = Mc(service)
        const res = await mc.getAuth({username: 'xldadmin', password: '111111'})
        console.log(res)
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        tc = Tc(service)
        uc = Uc(service)
        dc = Dc(service)
        mc = Mc(service)
    })


    // app前置验证测试用例
    test('update access', async () => {
        const res = await mc.access.select({}) as IResType<Access>
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(1)
        const accessList = _.filter(res.data,(o)=>{return o.id >9})
        // console.log(accessList.length)
        for (const e of accessList) {
            updateModuleName(res.data,e.id)
        }
    }, 10000)

})

async function updateModuleName(accessList:Access[],id) {
    const access = _.find(accessList,(o)=>{return o.id == id})
    console.log({access})
    const access1 = _.find(accessList,(o)=>{return o.id == access.moduleId})
    access.moduleName = access1.url +'/'+ access.url
    console.log(access)

    const res2 = await mc.access.update({id:access.id,moduleName:access.moduleName})
    console.log(res2)
}
